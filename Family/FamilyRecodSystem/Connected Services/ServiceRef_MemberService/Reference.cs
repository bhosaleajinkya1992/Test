//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FamilyRecodSystem.ServiceRef_MemberService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelationMst", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceApp.DatabaseEntity")]
    [System.SerializableAttribute()]
    public partial class RelationMst : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationId {
            get {
                return this.RelationIdField;
            }
            set {
                if ((this.RelationIdField.Equals(value) != true)) {
                    this.RelationIdField = value;
                    this.RaisePropertyChanged("RelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationName {
            get {
                return this.RelationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationNameField, value) != true)) {
                    this.RelationNameField = value;
                    this.RaisePropertyChanged("RelationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberDetail", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceApp.DatabaseEntity")]
    [System.SerializableAttribute()]
    public partial class MemberDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SuffixField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicantId {
            get {
                return this.ApplicantIdField;
            }
            set {
                if ((this.ApplicantIdField.Equals(value) != true)) {
                    this.ApplicantIdField = value;
                    this.RaisePropertyChanged("ApplicantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberId {
            get {
                return this.MemberIdField;
            }
            set {
                if ((this.MemberIdField.Equals(value) != true)) {
                    this.MemberIdField = value;
                    this.RaisePropertyChanged("MemberId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberLastName {
            get {
                return this.MemberLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberLastNameField, value) != true)) {
                    this.MemberLastNameField = value;
                    this.RaisePropertyChanged("MemberLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberMiddleName {
            get {
                return this.MemberMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberMiddleNameField, value) != true)) {
                    this.MemberMiddleNameField = value;
                    this.RaisePropertyChanged("MemberMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberName {
            get {
                return this.MemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberNameField, value) != true)) {
                    this.MemberNameField = value;
                    this.RaisePropertyChanged("MemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationId {
            get {
                return this.RelationIdField;
            }
            set {
                if ((this.RelationIdField.Equals(value) != true)) {
                    this.RelationIdField = value;
                    this.RaisePropertyChanged("RelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((this.SuffixField.Equals(value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef_MemberService.IMemberService")]
    public interface IMemberService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/DoWork", ReplyAction="http://tempuri.org/IMemberService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/DoWork", ReplyAction="http://tempuri.org/IMemberService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/GetRelations", ReplyAction="http://tempuri.org/IMemberService/GetRelationsResponse")]
        FamilyRecodSystem.ServiceRef_MemberService.RelationMst[] GetRelations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/GetRelations", ReplyAction="http://tempuri.org/IMemberService/GetRelationsResponse")]
        System.Threading.Tasks.Task<FamilyRecodSystem.ServiceRef_MemberService.RelationMst[]> GetRelationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/GetExistingMembers", ReplyAction="http://tempuri.org/IMemberService/GetExistingMembersResponse")]
        FamilyRecodSystem.ServiceRef_MemberService.MemberDetail[] GetExistingMembers(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/GetExistingMembers", ReplyAction="http://tempuri.org/IMemberService/GetExistingMembersResponse")]
        System.Threading.Tasks.Task<FamilyRecodSystem.ServiceRef_MemberService.MemberDetail[]> GetExistingMembersAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/CreateOrGetApplicantId", ReplyAction="http://tempuri.org/IMemberService/CreateOrGetApplicantIdResponse")]
        int CreateOrGetApplicantId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/CreateOrGetApplicantId", ReplyAction="http://tempuri.org/IMemberService/CreateOrGetApplicantIdResponse")]
        System.Threading.Tasks.Task<int> CreateOrGetApplicantIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/SaveMembers", ReplyAction="http://tempuri.org/IMemberService/SaveMembersResponse")]
        int SaveMembers(int memberId, string memberName, string memberMiddleName, string memberLastName, int suffix, System.DateTime dateOfBirth, int gender, int applicantId, int relationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemberService/SaveMembers", ReplyAction="http://tempuri.org/IMemberService/SaveMembersResponse")]
        System.Threading.Tasks.Task<int> SaveMembersAsync(int memberId, string memberName, string memberMiddleName, string memberLastName, int suffix, System.DateTime dateOfBirth, int gender, int applicantId, int relationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMemberServiceChannel : FamilyRecodSystem.ServiceRef_MemberService.IMemberService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemberServiceClient : System.ServiceModel.ClientBase<FamilyRecodSystem.ServiceRef_MemberService.IMemberService>, FamilyRecodSystem.ServiceRef_MemberService.IMemberService {
        
        public MemberServiceClient() {
        }
        
        public MemberServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MemberServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemberServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemberServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public FamilyRecodSystem.ServiceRef_MemberService.RelationMst[] GetRelations() {
            return base.Channel.GetRelations();
        }
        
        public System.Threading.Tasks.Task<FamilyRecodSystem.ServiceRef_MemberService.RelationMst[]> GetRelationsAsync() {
            return base.Channel.GetRelationsAsync();
        }
        
        public FamilyRecodSystem.ServiceRef_MemberService.MemberDetail[] GetExistingMembers(int id) {
            return base.Channel.GetExistingMembers(id);
        }
        
        public System.Threading.Tasks.Task<FamilyRecodSystem.ServiceRef_MemberService.MemberDetail[]> GetExistingMembersAsync(int id) {
            return base.Channel.GetExistingMembersAsync(id);
        }
        
        public int CreateOrGetApplicantId(int userId) {
            return base.Channel.CreateOrGetApplicantId(userId);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrGetApplicantIdAsync(int userId) {
            return base.Channel.CreateOrGetApplicantIdAsync(userId);
        }
        
        public int SaveMembers(int memberId, string memberName, string memberMiddleName, string memberLastName, int suffix, System.DateTime dateOfBirth, int gender, int applicantId, int relationId) {
            return base.Channel.SaveMembers(memberId, memberName, memberMiddleName, memberLastName, suffix, dateOfBirth, gender, applicantId, relationId);
        }
        
        public System.Threading.Tasks.Task<int> SaveMembersAsync(int memberId, string memberName, string memberMiddleName, string memberLastName, int suffix, System.DateTime dateOfBirth, int gender, int applicantId, int relationId) {
            return base.Channel.SaveMembersAsync(memberId, memberName, memberMiddleName, memberLastName, suffix, dateOfBirth, gender, applicantId, relationId);
        }
    }
}
